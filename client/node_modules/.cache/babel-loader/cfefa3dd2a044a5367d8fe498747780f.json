{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\nvar propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\nfunction diffLayerStyles(map, id, props, prevProps) {\n  var _props$layout = props.layout,\n      layout = _props$layout === void 0 ? {} : _props$layout,\n      _props$paint = props.paint,\n      paint = _props$paint === void 0 ? {} : _props$paint,\n      filter = props.filter,\n      minzoom = props.minzoom,\n      maxzoom = props.maxzoom,\n      beforeId = props.beforeId,\n      otherProps = _objectWithoutProperties(props, [\"layout\", \"paint\", \"filter\", \"minzoom\", \"maxzoom\", \"beforeId\"]);\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n\n  if (layout !== prevProps.layout) {\n    for (var key in layout) {\n      if (!deepEqual(layout[key], prevProps.layout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n  }\n\n  if (paint !== prevProps.paint) {\n    for (var _key in paint) {\n      if (!deepEqual(paint[_key], prevProps.paint[_key])) {\n        map.setPaintProperty(id, _key, paint[_key]);\n      }\n    }\n  }\n\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n\n  for (var _key2 in otherProps) {\n    if (!deepEqual(otherProps[_key2], prevProps[_key2])) {\n      map.setLayerProperty(id, _key2, otherProps[_key2]);\n    }\n  }\n}\n\nvar layerCounter = 0;\n\nvar Layer = function (_PureComponent) {\n  _inherits(Layer, _PureComponent);\n\n  function Layer(props) {\n    var _this;\n\n    _classCallCheck(this, Layer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Layer).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_map\", null);\n\n    _this.id = props.id || \"jsx-layer-\".concat(layerCounter++);\n    _this.type = props.type;\n    return _this;\n  }\n\n  _createClass(Layer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._createLayer();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this._updateLayer(prevProps);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._map.removeLayer(this.id);\n    }\n  }, {\n    key: \"_createLayer\",\n    value: function _createLayer() {\n      var _this2 = this;\n\n      var map = this._map;\n      var options = Object.assign({}, this.props);\n      options.id = this.id;\n      delete options.beforeId;\n\n      if (map.style._loaded) {\n        map.addLayer(options, this.props.beforeId);\n      } else {\n        map.once('styledata', function () {\n          return _this2.forceUpdate();\n        });\n      }\n    }\n  }, {\n    key: \"_updateLayer\",\n    value: function _updateLayer(prevProps) {\n      var props = this.props;\n      assert(!props.id || props.id === this.id, 'layer id changed');\n      assert(props.type === this.type, 'layer type changed');\n      var map = this._map;\n\n      if (!map.getLayer(this.id)) {\n        this._createLayer();\n\n        return;\n      }\n\n      try {\n        diffLayerStyles(map, this.id, props, prevProps);\n      } catch (error) {\n        console.warn(error);\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render(context) {\n      this._map = context.map;\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MapContext.Consumer, null, this._render.bind(this));\n    }\n  }]);\n\n  return Layer;\n}(PureComponent);\n\n_defineProperty(Layer, \"propTypes\", propTypes);\n\nexport { Layer as default };","map":{"version":3,"sources":["../../../src/components/layer.js"],"names":["propTypes","type","PropTypes","id","source","beforeId","string","layout","paint","filter","minzoom","maxzoom","otherProps","props","prevProps","map","deepEqual","layerCounter","Layer","PureComponent","options","Object","assert","diffLayerStyles","console","context"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nimport deepEqual from '../utils/deep-equal';\n\nimport type {MapContextProps} from './map-context';\n\nconst propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  source: PropTypes.string,\n  beforeId: PropTypes.string\n};\n\ntype LayerProps = {\n  id?: string,\n  type: string,\n  source?: string,\n  beforeId?: string,\n  layout: any,\n  paint: any,\n  filter?: Array<mixed>,\n  minzoom?: number,\n  maxzoom?: number\n};\n\n/* eslint-disable complexity */\nfunction diffLayerStyles(map: any, id: string, props: LayerProps, prevProps: LayerProps) {\n  const {layout = {}, paint = {}, filter, minzoom, maxzoom, beforeId, ...otherProps} = props;\n\n  if (beforeId !== prevProps.beforeId) {\n    map.moveLayer(id, beforeId);\n  }\n  if (layout !== prevProps.layout) {\n    for (const key in layout) {\n      if (!deepEqual(layout[key], prevProps.layout[key])) {\n        map.setLayoutProperty(id, key, layout[key]);\n      }\n    }\n  }\n  if (paint !== prevProps.paint) {\n    for (const key in paint) {\n      if (!deepEqual(paint[key], prevProps.paint[key])) {\n        map.setPaintProperty(id, key, paint[key]);\n      }\n    }\n  }\n  if (!deepEqual(filter, prevProps.filter)) {\n    map.setFilter(id, filter);\n  }\n  if (minzoom !== prevProps.minzoom || maxzoom !== prevProps.maxzoom) {\n    map.setLayerZoomRange(id, minzoom, maxzoom);\n  }\n  for (const key in otherProps) {\n    if (!deepEqual(otherProps[key], prevProps[key])) {\n      map.setLayerProperty(id, key, otherProps[key]);\n    }\n  }\n}\n/* eslint-enable complexity */\n\nlet layerCounter = 0;\n\nexport default class Layer<Props: LayerProps> extends PureComponent<Props> {\n  static propTypes = propTypes;\n\n  constructor(props: Props) {\n    super(props);\n    this.id = props.id || `jsx-layer-${layerCounter++}`;\n    this.type = props.type;\n  }\n\n  componentDidMount() {\n    this._createLayer();\n  }\n\n  componentDidUpdate(prevProps: LayerProps) {\n    this._updateLayer(prevProps);\n  }\n\n  componentWillUnmount() {\n    this._map.removeLayer(this.id);\n  }\n\n  id: string;\n  type: string;\n  _map: any = null;\n\n  _createLayer() {\n    const map = this._map;\n    const options = Object.assign({}, this.props);\n    options.id = this.id;\n    delete options.beforeId;\n\n    if (map.style._loaded) {\n      // console.log('adding layer');\n      map.addLayer(options, this.props.beforeId);\n    } else {\n      map.once('styledata', () => this.forceUpdate());\n    }\n  }\n\n  /* eslint-disable complexity */\n  _updateLayer(prevProps: LayerProps) {\n    const {props} = this;\n    assert(!props.id || props.id === this.id, 'layer id changed');\n    assert(props.type === this.type, 'layer type changed');\n\n    const map = this._map;\n\n    if (!map.getLayer(this.id)) {\n      this._createLayer();\n      return;\n    }\n\n    try {\n      diffLayerStyles(map, this.id, props, prevProps);\n    } catch (error) {\n      console.warn(error); // eslint-disable-line\n    }\n  }\n  /* eslint-disable complexity */\n\n  _render(context: MapContextProps) {\n    this._map = context.map;\n    return null;\n  }\n\n  render() {\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}