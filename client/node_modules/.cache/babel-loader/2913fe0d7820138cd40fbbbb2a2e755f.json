{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\nvar propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string\n};\nvar sourceCounter = 0;\n\nvar Source = function (_PureComponent) {\n  _inherits(Source, _PureComponent);\n\n  function Source(props) {\n    var _this;\n\n    _classCallCheck(this, Source);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Source).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_map\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_sourceOptions\", {});\n\n    _this.id = props.id || \"jsx-source-\".concat(sourceCounter++);\n    _this.type = props.type;\n    return _this;\n  }\n\n  _createClass(Source, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._map.removeSource(this.id);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource() {\n      return this._map.getSource(this.id);\n    }\n  }, {\n    key: \"_createSource\",\n    value: function _createSource() {\n      var _this2 = this;\n\n      var map = this._map;\n\n      if (map.style._loaded) {\n        map.addSource(this.id, this._sourceOptions);\n      } else {\n        map.once('styledata', function () {\n          return _this2.forceUpdate();\n        });\n      }\n    }\n  }, {\n    key: \"_updateSource\",\n    value: function _updateSource() {\n      var sourceOptions = this._sourceOptions,\n          props = this.props;\n      assert(!props.id || props.id === this.id, 'source id changed');\n      assert(props.type === this.type, 'source type changed');\n      var changedKey = null;\n      var changedKeyCount = 0;\n\n      for (var key in props) {\n        if (key !== 'children' && key !== 'id' && sourceOptions[key] !== props[key]) {\n          sourceOptions[key] = props[key];\n          changedKey = key;\n          changedKeyCount++;\n        }\n      }\n\n      var type = this.type,\n          map = this._map;\n      var source = this.getSource();\n\n      if (!source) {\n        this._createSource();\n\n        return;\n      }\n\n      if (!changedKeyCount) {\n        return;\n      }\n\n      if (type === 'geojson') {\n        source.setData(sourceOptions.data);\n      } else if (type === 'image') {\n        source.updateImage({\n          url: sourceOptions.url,\n          coordinates: sourceOptions.coordinates\n        });\n      } else if ((type === 'canvas' || type === 'video') && changedKeyCount === 1 && changedKey === 'coordinates') {\n        source.setCoordinates(sourceOptions.coordinates);\n      } else {\n        map.removeSource(this.id);\n        map.addSource(sourceOptions);\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render(context) {\n      var _this3 = this;\n\n      this._map = context.map;\n\n      this._updateSource();\n\n      return React.Children.map(this.props.children, function (child) {\n        return cloneElement(child, {\n          source: _this3.id\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MapContext.Consumer, null, this._render.bind(this));\n    }\n  }]);\n\n  return Source;\n}(PureComponent);\n\n_defineProperty(Source, \"propTypes\", propTypes);\n\nexport { Source as default };","map":{"version":3,"sources":["../../../src/components/source.js"],"names":["propTypes","type","PropTypes","id","string","sourceCounter","Source","PureComponent","props","map","sourceOptions","assert","changedKey","changedKeyCount","key","source","url","coordinates","context","cloneElement"],"mappings":"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","sourcesContent":["// @flow\n// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React, {PureComponent, cloneElement} from 'react';\nimport PropTypes from 'prop-types';\nimport MapContext from './map-context';\nimport assert from '../utils/assert';\n\nimport type {MapContextProps} from './map-context';\n\nconst propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string\n};\n\ntype SourceProps = {\n  id?: string,\n  type: string,\n  children?: any\n};\n\nlet sourceCounter = 0;\n\nexport default class Source<Props: SourceProps> extends PureComponent<Props> {\n  static propTypes = propTypes;\n\n  constructor(props: Props) {\n    super(props);\n    this.id = props.id || `jsx-source-${sourceCounter++}`;\n    this.type = props.type;\n  }\n\n  componentWillUnmount() {\n    this._map.removeSource(this.id);\n  }\n\n  id: string;\n  type: string;\n  _map: any = null;\n  _sourceOptions: any = {};\n\n  getSource() {\n    return this._map.getSource(this.id);\n  }\n\n  _createSource() {\n    const map = this._map;\n    if (map.style._loaded) {\n      map.addSource(this.id, this._sourceOptions);\n    } else {\n      map.once('styledata', () => this.forceUpdate());\n    }\n  }\n\n  /* eslint-disable complexity */\n  _updateSource() {\n    const {_sourceOptions: sourceOptions, props} = this;\n    assert(!props.id || props.id === this.id, 'source id changed');\n    assert(props.type === this.type, 'source type changed');\n\n    let changedKey = null;\n    let changedKeyCount = 0;\n\n    for (const key in props) {\n      if (key !== 'children' && key !== 'id' && sourceOptions[key] !== props[key]) {\n        sourceOptions[key] = props[key];\n        changedKey = key;\n        changedKeyCount++;\n      }\n    }\n\n    const {type, _map: map} = this;\n    const source = this.getSource();\n    if (!source) {\n      this._createSource();\n      return;\n    }\n    if (!changedKeyCount) {\n      return;\n    }\n    if (type === 'geojson') {\n      source.setData(sourceOptions.data);\n    } else if (type === 'image') {\n      source.updateImage({url: sourceOptions.url, coordinates: sourceOptions.coordinates});\n    } else if (\n      (type === 'canvas' || type === 'video') &&\n      changedKeyCount === 1 &&\n      changedKey === 'coordinates'\n    ) {\n      source.setCoordinates(sourceOptions.coordinates);\n    } else {\n      map.removeSource(this.id);\n      map.addSource(sourceOptions);\n    }\n  }\n  /* eslint-enable complexity */\n\n  _render(context: MapContextProps) {\n    this._map = context.map;\n    this._updateSource();\n    return React.Children.map(this.props.children, child =>\n      cloneElement(child, {\n        source: this.id\n      })\n    );\n  }\n\n  render() {\n    return <MapContext.Consumer>{this._render.bind(this)}</MapContext.Consumer>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}